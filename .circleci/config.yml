version: 2
jobs:
  unit_test:
    docker:
      # Node 8 LTS
      - image: circleci/node:carbon
    steps:
      - checkout
      - run: npm install
      - run: npm run lint
      - run: npm run test:unit

  integration_test:
    docker:
      # Node 8 LTS
      - image: circleci/node:carbon
      # configuration database
      - image: circleci/postgres:9.6.2-alpine
        name: config_postgres
        environment:
            POSTGRES_USER: postgresql
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: aerogear_data_sync_db
      # memeolist database
      - image: circleci/postgres:9.6.2-alpine
        name: memeolist_postgres
        environment:
            POSTGRES_USER: postgresql
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: memeolist_db
    steps:
      - checkout
      - run:
          name: Wait for configuration database to start up
          command: dockerize -wait tcp://config_postgres:5432 -timeout 120s
      - run:
          name: Wait for memeolist database to start up
          command: dockerize -wait tcp://memeolist_postgres:5432 -timeout 120s
      - run: npm install
      - run:
          command: npm run db:init
          environment:
            POSTGRES_HOST: 'config_postgres'
            POSTGRES_PORT: '5432'
      - run:
          command: npm run dev
          environment:
            POSTGRES_HOST: 'config_postgres'
            POSTGRES_PORT: '5432'
          background: true
      - run: npm install tap-xunit --dev
      - run: mkdir -p ~/reports
      - run:
          command: ./node_modules/.bin/ava  --concurrency=1 --tap integration_test/*.test.js | ./node_modules/.bin/tap-xunit > ~/reports/ava.xml
          environment:
            POSTGRES_HOST: 'config_postgres'
            POSTGRES_PORT: '5432'
            MEMEOLIST_DB_HOST: 'memeolist_postgres'
            MEMEOLIST_DB_PORT: '5432'
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

  docker_push_master:
    docker:
      # Node 8 LTS
      - image: circleci/node:carbon
    steps:
      - checkout
      - setup_remote_docker
      - run: npm run docker:build
      - run: npm run docker:push

  docker_push_release:
    docker:
      # Node 8 LTS
      - image: circleci/node:carbon
    steps:
      - checkout
      - setup_remote_docker
      - run: npm run release:validate
      - run: npm run docker:build:release
      - run: npm run docker:push:release

workflows:
  version: 2
  build_and_push:
    jobs:
      - unit_test:
          filters:
            tags:
              only: /.*/
      - integration_test:
          filters:
            tags:
              only: /.*/
      - docker_push_master:
          requires:
            - unit_test
            - integration_test
          filters:
            branches:
              only:
                - master
      - docker_push_release:
          requires:
            - unit_test
            - integration_test
          filters:
            tags:
              only: /.*/ # allow anything because tag syntax is validated as part of validate-release.sh
            branches:
              ignore: /.*/